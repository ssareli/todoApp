{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf160
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue120;\red234\green234\blue234;\red0\green0\blue0;
\red107\green0\blue1;\red109\green109\blue109;\red37\green127\blue159;}
\margl1440\margr1440\vieww8220\viewh13440\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 build notes:\
- f\'92d up the buttons and href links (need fix)\
- fixed completed items sorting\
- created sorting footer menu\
- added default multisort\
- priority visualization\
==================================\
\
0) snooze\
- remove \'93~\'94 if it exists\
- convert back to friendly date for deadline\
- update all cases to save both epoch and human friendly dates\
\
1) epic time = getShiftedDate(today, shift)\
- create time bucket service (singleton)\
- determine today at 11:59:59\
- calculate each time bucket\
- store results in local storage (use device time not server)\
- check date on bucket calculations on loan prior to re-running them\
\
\
**********************\
Code Conventions:\
- business logic should live in services\
- data should life in local storage and cloud\
- constants should live in value\
- select data fields should live in constant arrays (near service that processes them)\
\
\
default:  dateRange = dates < \'93today @ 11:59:59\'94\
example:  wednesday\
this week = 7 days in range\
7 days starting monday (including first day)\
days since monday (2) - range (7) \
= remaining days in the week = 5\
today + 5 days \'93this week\'94\
\
example: 1/15/15\
this month = 30 or 31 days in range (lookup month & leap years)\
30/31 days starting on first day (inclusive)\
days since month 1st day (15) - range (31)\
= remaining days in the month = 16\
today + 16 days \'93this month\'94\
\
\
\pard\pardeftab720\sl356

\f1\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 var\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4  days_in_months = [\cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 31\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 , \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 28\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 , \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 31\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 , \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 30\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 , \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 31\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 , \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 30\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 , \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 31\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 , \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 31\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 , \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 30\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 , \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 31\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 , \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 30\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 , \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 31\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ];\
\pard\pardeftab720\sl356
\cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 // for leap years, February has 29 days. Check whether\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 // February, the 29th exists for the given year\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\pard\pardeftab720\sl356
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 if\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ( (\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 new\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4  \cf7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Date\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 (year, \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 1\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 , \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 29\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 )).getDate() == \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 29\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4  ) days_in_month[\cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 1\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ] = \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 29\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ;\
}
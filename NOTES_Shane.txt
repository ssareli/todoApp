
Goals:
========================= v1.0
1) Get todos fully functional
	- reminder date/time alerts
		- separate deadline from task
		- set duration default to "0.00"
		- triggers push notif
		- listed in special section with different visuals
	- natural language todo creation ("get milk today @ 4pm 30min")
	- self extinguishing tasks (simple reminders)
	- recurring tasks
		- daily/weekly
		- Create hourly per day schedule (I.e. take 15min breaks during Biz hours)
2) Create lists
	- add/view lists to todo
	- view lists w/ full contents
	- set done/not done w/ checkbox
	- make goal
	- set deadlines
	- set active/inactive for filtering
	- take a break menu <button on-hold="onHold()" class="button">Test</button>
	- tags (todos and lists)
	- types: checklist, tasks, bucketlist
	- reordering items in current view 
3) Projects
	- add/view lists to project
	- view project for todos
	- filter todos based on project
	- filter lists based on 
	- color coding by project
	- set active/inactive for filtering
	- task and list dependency?
	- Projects, lists and goals get stack ranked in priority order
5) Collaboration
	- authentication
	- sharing
	- assigning owners
=========================== v1.5
6) Calendaring
	- create day dividers in "this week" view
	- organize events by time into a time schedule. put non-time deadlined tasks back to back with 15min buffers in between
	- by default, prevent tasks from overlapping specific time slots (unless manually overridden)
	- show day planner view of tasks
	- generate iCal feed for Google Calendar integration
	- import phone calendars
	- prevent collisions with 3rd party calendar elements (possible?)

7) Scheduler
	- basic schedule input (i.e. 14hrs per day)
	- tracking schedule capacity limits
		- update footer to compare time needed vs availabe
	- generate computed start times for soft deadlines (visible)
		- 15min buffer between each
		- 30min after a task should be complete, auto-slip schedule
	- schedule push (recursive rescheduling based on capacity)
	- smart push:  priority, blocking tasks, day usage maximization
	- alert: today's schedule isn't possible, show changes
	- vacation mode (recurring reminder location setting?)
	- enforcing deadlines & capacity limits on list contents
	- project % schedule buckets
	- auto-scheduling based on schedule + buckets
	- Tasks can't go overdue, just get rescheduled (keep scheduling history)Unassigned 


==============================================

- optimizations
	- use memory for date hash checks before deadline with local storage
	- use local storage except for edits (maintain "updated" toggle variable).  only read from parse when changes have been made or on initial app load
	- only read/write single records to DB instead of pulling down entire DB every list load
	- ng-options simpler solution for collecting data for selects?
	- collection-repeat (for search and “all” views)
	Solution: I switched to a much more complete build system called ionic-generator which utilizes grunt js instead of gulp. Switching reduced the app from 10mb to 3mb, added support for multiple build environments, and provided js linting, ripple, and more.
	- archive completed items > 30 days old
		- set inactive, filter by active

- bugs
	P1 quick add items don't show up without a refresh
	P1 make checkbox bigger or shrink edit zone
	P1 fix href fuckups
	P2 after editing or updating the side menu functionality breaks
	?? Timestamp comparisons are done in GMT, not local, could create issues on filtering?

- polish
	- make todo items aligned using Grid
	- make checkboxes larger icons that toggle states
	- move to slide boxes or gesture events
	- pinchout to add item inline 
	- UX: make adding lots of items quickly super easy, primed
	- gesture to take a break menu (pinch in, swipe right, or hold)
	- UX: adjust to local timezone
	- Ux: hold and move items 
		- create hour dividers in "today" view
	- required field enforcement
	- better cross-platform date and time selector ("clear at top"), "cancel"
	- don't let filters get hidden by search
	- add duration and deadline natural language reader/setter to title
	- convert partial hours into minutes (i.e. .25 = 15min)
	- allow for setting start of week day
	- new task, set hard deadline move soft to “none”
	- offline mode
		- detect when offline and use local storage data
		- add/edit new items to local storage
		- parse items are uneditable (grey color?)
		- back online, all items are synched
	- live sync
	- comments should open a modal to read/write
	- start count-down timer (adjustable)
		- and track time spent
		- offer pause, play
	- clicking search icon opens search and opens keyboard

========================
- setup angularjs, phonegap templates for sublime
- firebase backend for real-time data sync across devices (online/offline support)?

- questions
	- did calendar widget branch me off beta v14?


ng-click
ng-dbl-click
ng-mousedown
ng-mouseup
ng-mouseenter
ng-mouseleave
ng-mousemove
ng-mouseover
ng-keydown
ng-keyup
ng-keypress
ng-change
